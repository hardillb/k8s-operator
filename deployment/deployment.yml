apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-red-operator
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: node-red-operator
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["create", "patch", "get", "list", "watch", "delete"] 
- apiGroups: [""]
  resources: ["services"]
  verbs: ["create", "patch", "get", "list", "watch", "delete"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create", "patch", "get", "list", "watch", "delete"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["create", "patch", "get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: node-red-operator
  namespace: default
subjects:
- kind: ServiceAccount
  name: node-red-operator
  namespace: default
roleRef:
  kind: Role
  name: node-red-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-red-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-red.hardill.me.uk
  template:
    metadata:
      labels:
        app: node-red.hardill.me.uk
    spec:
      serviceAccountName: node-red-operator
      containers:
      - name: node-red
        image: containers.hardill.me.uk/testing/node-red-operator:latest
        imagePullPolicy: Always
        ports:
        - name: https
          containerPort: 8443
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: node-red
spec:
  type: NodePort
  selector:
    app: node-red.hardill.me.uk
  ports:
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: node-red.hardill.me.uk
webhooks:
- name: node-red.hardill.me.uk
  # namespaceSelector:
  #   matchExpressions:
  #   - key: kubernetes.io/metadata.name
  #     operator: In
  #     values: 
  #       - groupOne
  rules:
  - apiGroups:   [ "k8s.hardill.me.uk" ]
    apiVersions: [ "v1", "k8s.hardill.me.uk/v1" ]
    resources:   [ "node-reds" ]
    operations:  [ "CREATE", "DELETE" ]
    scope:       Namespaced
  clientConfig:
    service:
      namespace: default
      name: node-red
      path: /create
    caBundle: CABUNDLE
  admissionReviewVersions: ["v1"]
  sideEffects: None
  timeoutSeconds: 5
  reinvocationPolicy: "Never"